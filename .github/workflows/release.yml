name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        zig-version: 0.15.1

    - name: Build All Configurations
      run: |
        echo "🔨 Building all configurations"
        zig build -Doptimize=Debug
        zig build -Doptimize=ReleaseSafe
        zig build -Doptimize=ReleaseFast

    - name: Run Tests
      run: |
        echo "🧪 Running tests"
        zig build test
        echo "✅ All tests passed"

    - name: Run Examples
      run: |
        echo "📚 Running examples"
        zig build run-numerical
        zig build run-memory
        zig build run-unified
        zig build run-batching
        zig build run-inline
        zig build run-release
        echo "✅ All examples completed"

  cross-compile:
    name: Cross-Compile
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        zig-version: 0.15.1

    - name: Cross-compile for Linux x86_64
      run: |
        echo "🐧 Cross-compiling for Linux x86_64"
        zig build -Dtarget=x86_64-linux-gnu -Doptimize=ReleaseFast

    - name: Cross-compile for Windows x86_64
      run: |
        echo "🪟 Cross-compiling for Windows x86_64"
        zig build -Dtarget=x86_64-windows-gnu -Doptimize=ReleaseFast

    - name: Cross-compile for macOS x86_64
      run: |
        echo "🍎 Cross-compiling for macOS x86_64"
        zig build -Dtarget=x86_64-macos -Doptimize=ReleaseFast

    - name: Cross-compile for macOS ARM64
      run: |
        echo "🍎 Cross-compiling for macOS ARM64"
        zig build -Dtarget=aarch64-macos -Doptimize=ReleaseFast

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-and-test, cross-compile]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        zig-version: 0.15.1

    - name: Build Release Artifacts
      run: |
        echo "📦 Building release artifacts"
        zig build -Doptimize=ReleaseFast

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
